name: Deploy resourses

on:
  push:
    branches:
      - master  
jobs:
  deploy-cdk-infra:
    runs-on: ubuntu-latest

    steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 20

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: 3.11

        - name: Install pipenv
          run: pip install pipenv

        - name: Install CDK CLI
          run: npm install -g aws-cdk

        - name: Package Lambda Function with Dependencies
          working-directory: ./lambda/db_search_app
          run: |
            pipenv requirements > requirements.txt
            mkdir -p dist
            pip install -r requirements.txt -t dist/
            cp -r src/ dist/
            rm requirements.txt

        - name: Install Python dependencies
          working-directory: ./cdk_infra
          run: pipenv install --deploy --ignore-pipfile --dev

        - name: CDK Synth
          working-directory: ./cdk_infra
          run: pipenv run cdk synth

        - name: CloudFormation Lint
          working-directory: ./cdk_infra
          run: pipenv run cfn-lint cdk.out/MinimalStack.template.json

        - name: Deploy CDK Stack
          working-directory: ./cdk_infra
          run: pipenv run cdk deploy --require-approval never
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: eu-central-1

  deploy-microservices:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Render Deployment for db_app
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_DB_APP }}
        run: |
          curl "$deploy_url"

      - name: Trigger Render Deployment for webcamera_app
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_WEBCAMERA_APP }}
        run: |
          curl "$deploy_url"

      - name: Trigger Render Deployment for wiki_app
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_WIKI_APP }}
        run: |
          curl "$deploy_url"

  deploy-main-app:
    needs: deploy-microservices
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deployment for Main App
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_MAIN_APP }}
        run: |
          curl "$deploy_url"
